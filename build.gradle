buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'idea'

idea.module.inheritOutputDirs = true

def BUILD_ID = System.getenv('CI_PIPELINE_IID')
version = '0.3.0' + (BUILD_ID != null ? "+${BUILD_ID}" : '')
group = 'com.eugenearch'
archivesBaseName = 'PixelmonWorkshops'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

minecraft {
    mappings channel: 'snapshot', version: '20171003-1.12'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            args '--username', 'SlowBro'
            workingDirectory project.file('run/client')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }

        server {
            workingDirectory project.file('run/server')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}

repositories {
    mavenCentral()

    maven {
        name = "JEI"
        url "https://dvs1.progwml6.com/files/maven"
    }

    maven {
        name = "Curse"
        url = "https://www.cursemaven.com/"
    }

    maven {
        name = "Craft/Mine Tweaker"
        url "https://maven.blamejared.com"
    }
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation 'org.jetbrains:annotations:22.0.0'
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2854'

    compileOnly 'mezz.jei:jei_1.12.2:4.16.1.302:api'
    runtimeOnly fg.deobf('mezz.jei:jei_1.12.2:4.16.1.302')
}

jar.finalizedBy('reobfJar')

idea {
    module {
        inheritOutputDirs = true
    }
}

task prepareAssets(type: Copy) {
    group = 'build'

    from project.file('src/main/resources')
    into project.file('build/classes/java/main')
}

classes.dependsOn(prepareAssets)


processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version': project.version
    }
}



